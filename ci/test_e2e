#!/bin/bash -e

# Remote Integration Test Runner
#
# This runs only e2e features, which are those dependent on
# access to a remote PCF instance. Run this script from the `bin`
# directory with `summon ./test_e2e`, with
# proper summon credentials.
#

cd "$(dirname "$0")"
# shellcheck disable=SC1091
. ./utils

function cleanup(){
  if [[ -z "${compute_ip:-}" ]]; then
    ipmanager remove "${compute_ip}" || true
  fi
  finish
}
trap cleanup EXIT

# Allow hammerfile path to be overidden, but default to hammerfile.json
# in the root of the repo.
HAMMERFILE_DEFAULT="$(git rev-parse --show-toplevel)/hammerfile.json"
export HAMMERFILE="${HAMMERFILE:-"${HAMMERFILE_DEFAULT}"}"

if [[ -r "${HAMMERFILE}" ]]; then
  getISVCFCreds
  addComputeIPToIPManager || { sleep 30; addComputeIPToIPManager; }
else
  echo "Hammerfile not detected"
fi

# First, check for summon variables
: "${CF_API_ENDPOINT?"Error: Need to set CF_API_ENDPOINT"}"

setup_env
build_test_images
start_conjur

# If we're running in Jenkins, skip this step
[[ -z $JENKINS_HOME ]] && package_and_unpack_buildpack

announce 'Building the Java test application...'
pushd ../tests/integration/apps/java
  ./bin/build
popd

feature_tags="@integration"

if [[ "${E2E_TEST_WINDOWS}" == "true" ]]; then

  announce 'Building the Dotnet Windows test application...'
  pushd ../tests/integration/apps/dotnet-windows
    ./build
  popd

  feature_tags="${feature_tags} or @integration-windows"
fi 

announce 'Running Cucumber tests...'
# Run tests against latest build of buildpack (including integration tests against remote foundation)
docker compose \
    -f "$DOCKER_COMPOSE_FILE" \
    run --rm \
    -w "$CONTAINER_FEATURES_DIR" \
    tester cucumber \
    --publish-quiet \
    --format pretty \
    --format junit \
    --out "./reports/e2e" \
    --tags "$feature_tags"
